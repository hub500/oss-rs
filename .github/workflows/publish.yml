name: Publish to Cargo

on:
  push:
    branches: [ master,branch* ]
  pull_request:
    branches: []

jobs:
  publish:
    runs-on: ubuntu-latest

    name: 'publish'

    environment: cargo

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check fmt
        run: cargo fmt --check

      # v0.1.15 目前版本
      - name: Cache
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ runner.os }}-build-v0.2.0
      
      - name: Show cargo info
        run: cargo version --verbose

      - name: Install publish-action
        if: steps.cache-publish-action.outputs.cache-hit != 'true'
        run: |
          cargo install publish-action --version=0.2.0
          cargo install changelog
      
      - name: Run Test
        run: |
          cargo test --lib --no-default-features -- tests
          # --all-features, exclude bench features
          cargo test --lib --features="blocking,sts,put_file" -- tests
          cargo test --lib -- tests
          cargo test --lib --features blocking --no-default-features tests
          cargo test --lib --features blocking tests
          cargo test --lib --features sts --no-default-features tests
          cargo test --lib --features put_file --no-default-features tests
          cargo test --lib --features core --no-default-features tests
          cargo test --lib --features auth --no-default-features tests
          cargo test --lib --features decode --no-default-features tests
          # --all-features, exclude bench features
          cargo test --doc --features="blocking,sts,put_file"
          cd oss_derive
          cargo test
          cargo test --features blocking
      
      - name: Run publish-action
        if: ${{ github.event_name == 'push' }}
        id: publish-action
        run: 
          publish-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      # - name: Update Changelog.md
      #   if: steps.publish-action.outputs.new_version == 'true' && steps.publish-action.outputs.publish == 'true'
      #   run: |
      #     changelog -o Changelog.md
      # - uses: stefanzweifel/git-auto-commit-action@v4
      #   if: steps.publish-action.outputs.new_version == 'true' && steps.publish-action.outputs.publish == 'true'
      #   with:
      #     commit_message: Update Changelog.md
  coverage:
    name: Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache
        uses: Swatinem/rust-cache@v1

      - name: Install cargo-tarpaulin
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-tarpaulin

      - name: Run cargo tarpaulin
        uses: actions-rs/cargo@v1
        with:
          command: tarpaulin
          # --all-features, exclude bench features
          args: --output-dir coverage --out Lcov --features blocking --features sts --features put_file -- tests
      
      # - name: Publish to Coveralls
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
